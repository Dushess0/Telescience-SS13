{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/calculator/calculator.component.ts","./src/app/calculator/calculator.component.html","./src/app/error.service.ts","./src/app/misc/misc.component.ts","./src/app/misc/misc.component.html","./src/app/point/point.component.ts","./src/app/point/point.component.html","./src/app/triangulator/triangulator.component.ts","./src/app/triangulator/triangulator.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'calculator';\n}\n","<div class=\"header\">\r\n  <h2>About telescience</h2>\r\n  <p>In Space Station 13, telescience is a part of RnD, which purpose is teleporting to derelicts (abandoned labs, space shuttles) and exploring\r\n       them to find disks with important data or rare equipment. But everyone use it to steal Captain's spare ID or take weapons from weaponry. Remember you will be fired (banned) if you do this! (of course if you are a traitor there is no limits)</p>\r\n  \r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"column\" style=\"background-color:rgb(156, 41, 250); color:rgb(255, 255, 255)\">  <app-calculator></app-calculator></div>\r\n  <div class=\"column\" style=\"background-color:rgb(151, 9, 194); color:rgb(255, 255, 255)\"> <app-triangulator></app-triangulator></div>\r\n  <div class=\"column\" style=\"background-color:rgb(98, 0, 155);color:rgb(255, 255, 255)\"> <app-misc></app-misc></div>\r\n</div>\r\n\r\n<div class=\"footer\">\r\n  \r\n<h3>Ground control to major Tom</h3>\r\n<p>\r\n    There are two parts of equipment: <strong>Telescience console</strong>  and <strong>Telepad</strong> . Console used to enter values and open portal and telepad is spawning this portal. Console have next parametres: Bearing, Elevation, Power, Sector. \r\n    They are defining a point (x,y,z) in space. Wait but this is 2D game, how it's possible it have 3 dimensions? Well, Z stands for sector or layer, there are 6 sectors, 1 and 5 are empty space, 2 is sector of station, 3 and 4 used for derelicts and 6 for mining outpost. You can view your position by using Global Positioning System (GPS),    Wher round starts you need to link telepad to console, open maintenance panel of telepad with <strong>screwdriver</strong> ,  get data with <strong>multitool</strong>, close panel, upload data from multitool to console.\r\n    Console needs at least one <strong>bluespace crystal</strong> to open the portal. \r\n    Usually there are plenty of them in telescience lab. Take all of them and insert into console. \r\n</p>\r\n<h3>Liftoff</h3>     \r\n<p><strong>Bluespace crystals</strong> need to be <strong>calibrated</strong> first. \r\n  After each callibration crystals change <strong>errors</strong>, you can open portal 10-20 times before next calibration. \r\n  You need to find errors to open portal in exact point. There are two approaches to find errors: \r\n<strong>Power</strong> and <strong>Elevation</strong>. open wormhole, measure output location using GPS, change one of those parametres (power or elevation) on console then open next wormhole, measure second location. Enter data into calculator and now you have errors, now you can access every location. \r\n<h3>Planet Earth is blue and there is nothing I can do</h3>\r\n<p>Derelicts contains a lot of good stuff, mecha parts, disks with important data, science equipment, hardsuits, scavenge everything. If you are <strong class=\"robust\">ROBUST</strong> you can kill Syndicate commandos and take their space suits and weapons.</p>\r\n<p>If you are lucky enough you can find alive people (dead or ghost players can join as them)</p>\r\n<h3>Stars looks very different today</h3>\r\n<p>Telescience is very dangerous job!</p>\r\n<ul>\r\n  <li>Take a weapon! Abandoned labs or stations have a lot of dangers: Syndicate soldiers, hive bots, combat drones, unknown biological forms,laser turrets, <strong class=\"clown\">CLOWNS</strong>. You can take kinetic rifle from Research outpost. Use it to propel yourself in space, it has unlimited ammo and can kill somebody when used wise. </li>\r\n  <li>Take tools, you need them to make your way to the disk. Crowbar and screwdriver are essential minimum.</li>\r\n  <li>Take GPS and set tag as your name, it make easier to find your dead body</li>\r\n  <li>Notify somebody about your intentions, maybe they don't forgot about you</li>\r\n  <li>Telescience equipment consumes a lot of energy, let the engieneers configure engine and wait until APC will be fully charged.</li> \r\n</ul>\r\n<h3>Can you hear me major Tom?</h3>\r\n<p>You forgot about something in list above or something bad happened on station. Now you are lost in space. Propably, you have no chance to return back unless you have a friends on station and they didn't forget about you. In this situation you can message them by changing tag on your GPS to something like SOS.</p>\r\n<p>Your space suit is your last hope, if it get  damaged you are dead!</p>\r\n<p>Okay, if there is a chance, wait some time around the place where wormhole was. Somebody can open it again.<br>\r\nThe main problem is sector, if you was exploring derelicts your sector is 3 or 4. The station layer is 2 and mining and research outpost is 6. Anyway you need to propel yourself in south-west direction and just float some time in space. Check your GPS when your layer becomes 2 or 6 and then move to the station now.\r\n<br><strong>Welcome back to the station!</strong>  </p> \r\n\r\n\r\n\r\n</div>\r\n  \r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { CalculatorComponent } from './calculator/calculator.component';\nimport { PointComponent } from './point/point.component';\nimport { TriangulatorComponent } from './triangulator/triangulator.component';\nimport { MatFormFieldModule  } from \"@angular/material/form-field\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MiscComponent } from './misc/misc.component';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalculatorComponent,\n    PointComponent,\n    TriangulatorComponent,\n    MiscComponent\n  ],\n  imports: [\n    MatSlideToggleModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,MatFormFieldModule,MatSelectModule,ClipboardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { ErrorService } from \"../error.service\";\nimport { fromEvent } from 'rxjs';\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.scss']\n})\n\n\n\nexport class CalculatorComponent implements OnInit {\n\n\n\n  Start = {x:NaN,y:NaN}; \n  End = {x:NaN,y:NaN}; \n  Telepad = {x:NaN,y:NaN}; \n \n  isElevation:Boolean=true;\n  Elevation1:number=45;\n  Elevation2:number=50;\n\n  Power1:number=25;\n  Power2:number=30;\n  \n  Bearing:number=0;\n  \n  hasResult:Boolean=false;\n  deltaPower:number;\n  deltaBearing:number;\n  deltaElevation:number;\n\n  errorservice :ErrorService;\n  \n\n  @Output() onCalculated= new EventEmitter<Record<string,number>>();\n \n  constructor(errorservice:ErrorService) { this.errorservice=errorservice; this.errorservice.holopadUpdated$.subscribe(arg => {\n     \n    this.Telepad.x=arg[0];\n    this.Telepad.y=arg[1];\n    \n\n}\n); }\n\n  ngOnInit(): void {\n\n    fromEvent(document, 'click').subscribe(() =>this.errorservice.SetTelepad(this.Telepad.x,this.Telepad.y));\n  }\n \n\n\n  calculateErrors()\n  {\n    let delta1 = {\n      x: this.Start.x - this.Telepad.x,\n      y:  this.Start.y - this.Telepad.y,\n    };\n    let delta2 = {\n      x:  this.End.x - this.Telepad.x,\n      y:  this.End.y -this.Telepad.y,\n    };\n  \n    let D1 = Math.hypot(delta1.x, delta1.y);\n    let D2 = Math.hypot(delta2.x, delta2.y);\n  \n    let bearing1 = Math.atan2(delta1.x, delta1.y) * 180 / Math.PI;\n    let bearing2 = Math.atan2(delta2.x, delta2.y) * 180 / Math.PI;\n    this.deltaBearing = -Math.round((2 * this.Bearing - bearing1 - bearing2) / 2); //average\n    if (this.isElevation)\n    {\n      this.deltaElevation = Math.round(\n        90 / Math.PI * Math.atan(\n          (D2 * Math.sin(Math.PI / 90 * this.Elevation1) - D1*Math.sin(Math.PI / 90 *this.Elevation2)) / ///* fix vim highlighting here\n          (D1 * Math.cos(Math.PI / 90 * this.Elevation2) - D2*Math.cos(Math.PI / 90 * this.Elevation1))\n        )\n      );\n      \n      let p1 = Math.sqrt(10 * D1 / Math.sin(Math.PI / 90 * (this.Elevation1 +  this.deltaElevation)));\n      let p2 = Math.sqrt(10 * D2 / Math.sin(Math.PI / 90 * (this.Elevation2 +  this.deltaElevation)));\n      this.deltaPower = -Math.round((2 * this.Power1 - p1 - p2) / 2);\n    }\n    else\n    {\n      this.deltaPower = this.clamp(Math.round((Math.sqrt(D2) *  this.Power1 - Math.sqrt(D1) *  this.Power2) / (Math.sqrt(D1) - Math.sqrt(D2))), -4, 0);\n\n      let elev1 = Math.asin(10 * D1 / ( this.Power1 + this.deltaPower)**2) * 90 / Math.PI;\n      let elev2 = Math.asin(10 * D2 / ( this.Power2 + this.deltaPower)**2) * 90 / Math.PI;\n\n      if(Number.isNaN( this.Elevation1)) {\n        this.deltaElevation = -Math.round( this.Elevation1 - elev2);\n      } else if(Number.isNaN( this.Elevation2)) {\n        this.deltaElevation = -Math.round( this.Elevation1 - elev1);\n      } else {\n        this.deltaElevation = -Math.round((2 *  this.Elevation1 - elev1 - elev2) / 2);\n      }\n    }\n\n\n    this.errorservice.ErrorsCalculated({power:this.deltaPower,elevation:this.deltaElevation,bearing:this.deltaBearing, tele_x:this.Telepad.x,tele_y:this.Telepad.y});\n    this.hasResult=true;\n  }\n  clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  }\n\n  loadTelepad(x:number,y:number)\n  {\n    this.Telepad.x=x;\n    this.Telepad.y=y;\n  }\n\n}\n","<span>Power<mat-slide-toggle [(ngModel)]=\"isElevation\"> \n    \n</mat-slide-toggle>Elevation</span> <br/>\n<div>\n\n<app-point  id=\"TELEPAD\" [(cords)]=\"Telepad\" [x_label]=\"'Telepad X'\" [y_label]=\"'Telepad Y'\"    ></app-point> <br>\n<app-point [(cords)]=\"Start\" [x_label]=\"'X1:'\" [y_label]=\"'Y1:'\"  ></app-point> <br/>\n<app-point [(cords)]=\"End\" [x_label]=\"'X2:'\" [y_label]=\"'Y2:'\"></app-point>   \n</div>\n<div >\n  <ng-template [ngIf]=\"isElevation\" [ngIfElse]=\"power\">\n  \n   <label>Elevation 1\n       <input type=\"number\" [(ngModel)]=\"Elevation1\" /> \n   </label>\n   <label>Elevation 2\n    <input type=\"number\" [(ngModel)]=\"Elevation2\" /> \n    </label>\n\n  </ng-template>\n  <ng-template #power>\n    <label>Power 1 <select [(ngModel)]=\"Power1\">\n     <option value=\"5\">5</option>\n     <option value=\"10\">10</option>\n     <option value=\"20\">20</option>\n     <option value=\"25\">25</option>\n     <option value=\"30\">30</option>\n     <option value=\"40\">40</option>\n     <option value=\"50\">50</option>\n     <option value=\"80\">80</option>\n     <option value=\"100\">100</option>\n    </select>\n    </label>\n    <label>Power 2 <select [(ngModel)]=\"Power2\">\n      <option value=\"5\">5</option>\n      <option value=\"10\">10</option>\n      <option value=\"20\">20</option>\n      <option value=\"25\">25</option>\n      <option value=\"30\">30</option>\n      <option value=\"40\">40</option>\n      <option value=\"50\">50</option>\n      <option value=\"80\">80</option>\n      <option value=\"100\">100</option>\n     </select>\n     </label>\n  </ng-template>\n</div>\n\n\n<label *ngIf=\"isElevation\">POWER<select [(ngModel)]=\"Power1\">\n  <option value=\"5\">5</option>\n  <option value=\"10\">10</option>\n  <option value=\"20\">20</option>\n  <option value=\"25\">25</option>\n  <option value=\"30\">30</option>\n  <option value=\"40\">40</option>\n  <option value=\"50\">50</option>\n  <option value=\"80\">80</option>\n  <option value=\"100\">100</option>\n </select>\n </label>\n\n<label *ngIf=\"!isElevation\">ELEVATION\n    <input type=\"number\" [(ngModel)]=\"Elevation1\" />  \n</label>\n\n<label>Bearing\n    <input type=\"number\" [(ngModel)]=\"Bearing\" > \n</label>\n\n<br>\n<button (click)=\"calculateErrors()\">\n    Calculate Errors\n</button>\n\n<div *ngIf=\"hasResult\">\n  <p [style.background-color]=\"deltaBearing>10 ||deltaBearing<10 ? 'transparent' : 'red'\" >ΔBearing: {{deltaBearing}}</p> \n  <p [style.background-color]=\"deltaElevation>=-25 && deltaElevation<=25 ? 'transparent' : 'red'\" >ΔElevation: {{deltaElevation}}</p>\n  <p [style.background-color]=\"deltaPower>=-4 && deltaPower<=0 ? 'transparent' : 'red'\" >ΔPower: {{deltaPower}}</p>\n</div>","import { Injectable } from '@angular/core';\nimport { Subject }    from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n\n  private errorSource= new Subject<Record<string,number>>();\n  private holopadSource= new Subject<Array<number>>();\n  private blindSource= new Subject<void>();\n  private saveSource=new Subject<{bearing:number,elevation:number,power:number}>();\n  saveEvent= this.saveSource.asObservable();\n  blindEvent = this.blindSource.asObservable();\n  readyToPaste$= this.errorSource.asObservable();\n  holopadUpdated$=this.holopadSource.asObservable();\n\n\n  public ErrorsCalculated(res: Record<string,number>)\n  {\n    this.errorSource.next(res);\n  }\n\n  public SaveCords(cords:{bearing:number,elevation:number,power:number})\n  {\n    this.saveSource.next(cords);\n  }\n  public SetTelepad(x:number,y:number)\n  {\n     this.holopadSource.next([x,y]);\n  }\n  public BlindMode()\n  {\n    this.blindSource.next();\n  }\n\n\n  constructor() { }\n}\n","import { Component, OnInit,ChangeDetectorRef } from '@angular/core';\nimport { ErrorService } from '../error.service';\n\n@Component({\n  selector: 'app-misc',\n  templateUrl: './misc.component.html',\n  styleUrls: ['./misc.component.scss']\n})\nexport class MiscComponent implements OnInit {\n   errorSerivce:ErrorService;\n   save_iterator=0;\n   savedCords: {label:string,id:number,bearing: string,elevation: string,power: string}[] = [];\n\n\n  constructor(errorService:ErrorService, private cdr:ChangeDetectorRef ) { \n      this.errorSerivce=errorService;\n      errorService.saveEvent\n      .subscribe(arg => {\n         let label=window.prompt(\"Enter label\",\"Saved Pos\");\n         this.savedCords.push({label:label,id:this.save_iterator,\n          bearing: arg.bearing.toFixed(2),\n          elevation: arg.elevation.toFixed(2),\n          power: arg.power.toFixed(2)});\n          cdr.detectChanges();\n          \n      }\n      );\n\n\n  }\n  ngOnInit(): void {\n  }\n\n  loadTelepad(x:number,y:number)\n  { \n  \n     this.errorSerivce.SetTelepad(x,y);\n  }\n  BlindMode()\n  {\n     this.errorSerivce.BlindMode();\n  }\n\n}\n","<button (click)=\"loadTelepad(170,133)\">Load NSS Exodus Telepad position</button> <br>\n<button (click)=\"BlindMode()\">BLIND jump!</button>Enters average errors, better than nothing<br>\n<ul>\n    <li *ngFor=\"let cord of savedCords\"> {{cord.label}}\n         <button [cdkCopyToClipboard]=\"cord.bearing\">Bearing:{{cord.bearing}} </button>        \n         <button [cdkCopyToClipboard]=\"cord.elevation\">Elevation:{{cord.elevation}} </button>        \n         <button [cdkCopyToClipboard]=\"cord.power\">Power:{{cord.power}} </button>        \n    </li>\n</ul>","import { Component, OnInit, Input } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\n@Component({\n  selector: 'app-point',\n  templateUrl: './point.component.html',\n  styleUrls: ['./point.component.scss']\n})\nexport class PointComponent implements OnInit {\n\n  @Input() x_label:string;\n  @Input() y_label:string;\n\n\n  point={x:0,y:0};\n\n  @Output() cordsChange = new EventEmitter();\n  @Input()\n  get cords()\n  {\n     return this.point;\n  }\n   set cords(value)\n   {\n     this.point=value;\n     this.cordsChange.emit(this.cords);\n   }\n\n  constructor() { }\n\n  enterRaw()\n  {\n    let raw:string=prompt(\"Enter coordinated like Any(x,y,z)\").replace(/\\s/g, \"\");;\n\n    let reg= /\\((\\d*),(\\d*),\\d*\\)/i;\n    let res=reg.exec(raw);\n    if (res && res.length==3)\n    {\n      this.cords={x:Number.parseInt(res[1]),y:Number.parseInt(res[2])};\n    }\n\n    else\n    {\n     this.cords={x:Number.parseInt(/x=\\d*/.exec(raw)[0].substr(2)),y:Number.parseInt(/y=\\d*/.exec(raw)[0].substr(2))}\n    }\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<button (click)=\"this.enterRaw()\"></button>\n <label>{{x_label}}\n     <input [(ngModel)]=\"cords.x\" type=\"number\"/> \n </label> \n <label>{{y_label}}\n    <input [(ngModel)]=\"cords.y\" type=\"number\"/>\n</label> \n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ErrorService } from '../error.service';\n\n@Component({\n  selector: 'app-triangulator',\n  templateUrl: './triangulator.component.html',\n  styleUrls: ['./triangulator.component.scss']\n})\nexport class TriangulatorComponent implements OnInit {\n\n\n\n\n\n  \n  telepad = {x:NaN,y:NaN}; \n\n\n  targetPower:number=NaN;\n  targetBearing:number=NaN;\n  targeElevation:number=NaN;\n  hasResult:Boolean=false;\n  \n  errorService:ErrorService;\n  Errors = {power:NaN,bearing:NaN,elevation:NaN}\n  TargetPos= {x:NaN,y:NaN}; \n\n\n  constructor(errorService:ErrorService) { \n    this.errorService=errorService;\n    errorService.readyToPaste$\n      .subscribe(arg => {\n     \n          this.Errors={power:arg[\"power\"],bearing:arg[\"bearing\"],elevation:arg[\"elevation\"]}\n\n          this.telepad.x=arg[\"tele_x\"];\n          this.telepad.y=arg[\"tele_y\"];\n          \n      }\n      );\n      errorService.holopadUpdated$\n      .subscribe(arg => {\n     \n          this.telepad.x=arg[0];\n          this.telepad.y=arg[1];\n      }\n      );\n      errorService.blindEvent\n      .subscribe(arg => {\n     \n          this.Errors.bearing=0;\n          this.Errors.elevation=0;\n          this.Errors.power=-2;\n      }\n      );\n\n  \n  }\n\n  SaveCords()\n  {\n    this.errorService.SaveCords({bearing:this.targetBearing,elevation:this.targeElevation,power:this.targetPower});\n  }\n  \n  Triangulate(target:Record<string,number>,telepad:Record<string,number>,error:Record<string,number>,recurse:Boolean)\n  {\n\n\tconst POWERS = [5, 10, 20, 25, 30, 40, 50, 80, 100];\n\ttarget.x -= telepad.x;\n\ttarget.y -= telepad.y;\n\tlet distance = Math.hypot(target.x, target.y);\n\t\n\t//calculate minimum power for minimal electricity losses\n\tfor(let P of POWERS) {\n\t\tlet elevation = 90 / Math.PI * Math.asin(10 * distance / (P + error.power)**2);\n\t\tlet trueElevation = elevation - error.elevation;\n\t\tlet invElevation = 90 - elevation - error.elevation;\n\t\tlet bearing = 180 / Math.PI * Math.atan2(target.x, target.y) + error.bearing;\n\t\tbearing = bearing < 0 ? bearing + 360 : bearing;\n\t\tlet trueGood = (trueElevation > 0 && trueElevation < 90);\n\t\tlet invGood = (invElevation > 0 && invElevation < 90);\n\t\tif(!Number.isNaN(elevation) && (trueGood || invGood)) {\n\t\t\tlet hit = {\n\t\t\t\tbearing: bearing,\n\t\t\t\televation: trueGood ? trueElevation : invElevation,\n\t\t\t\tpower: P\n\t\t\t};\n\n\t\t\tlet miss = this.visit(hit, this.telepad, error);\n\t\t\tif(!recurse)\n\t\t\t\treturn hit;\n\t\t\ttarget.x = (target.x + this.telepad.x) - (miss.x - target.x - this.telepad.x);\n\t\t\ttarget.y = (target.y + this.telepad.y) - (miss.y - target.y - this.telepad.y);\n\t\t\treturn this.Triangulate(target, this.telepad, error, false);\n\t\t}\n  }\n  \n  return {\n\t\tbearing: NaN,\n\t\televation: NaN,\n\t\tpower: NaN\n\t  };\n  }\n  BeginTriangulation():void\n  {\n    \n    var target= Object.create(this.TargetPos);\n    \n    var  result= this.Triangulate(target,this.telepad,this.Errors,true);\n    this.targeElevation=result[\"elevation\"];\n    this.targetPower=result[\"power\"];\n    this.targetBearing=result[\"bearing\"];\n    this.hasResult=true;\n\n\n   }\n\n\n  visit(target, telepad, error) {\n    let rotation = target.bearing + error.bearing;\n    let angle = this.clamp(target.elevation + error.elevation, 1, 90);\n    let power = this.clamp(target.power + error.power, 1, 1000);\n    \n    let distance = 0.1 * power**2 * Math.sin(angle * Math.PI / 90)\n  \n    let targetX = Math.round(telepad.x + distance * Math.sin(rotation * Math.PI / 180));\n    let targetY = Math.round(telepad.y + distance * Math.cos(rotation * Math.PI / 180));\n    \n    return {\n      x: targetX,\n      y: targetY\n    };\n  }\n\n  clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<p>Calculate errors or insert them below</p>\n\n<label>Bearing Error\n    <input type=\"number\" [(ngModel)]=\"Errors.bearing\" /> \n</label>\n<label>Elevation Error\n    <input type=\"number\" [(ngModel)]=\"Errors.elevation\" /> \n</label>\n<label>Power Error\n    <input type=\"number\" [(ngModel)]=\"Errors.power\" /> \n</label>\n\n\n<p>Insert desired X and Y</p> \n<div class=\"target\"> \n<app-point [(cords)]=\"TargetPos\" [x_label]=\"'Target X'\" [y_label]=\"'Target Y'\"></app-point> </div><br>\n<button (click)=\"BeginTriangulation()\">Triangulate Position</button>\n\n\n<div *ngIf=\"hasResult\">\n  <button class=\"load\" [cdkCopyToClipboard]=\"this.targetBearing.toFixed(2)\">Bearing:{{this.targetBearing.toFixed(2)}} </button> \n  <button class=\"load\" [cdkCopyToClipboard]=\"this.targeElevation.toFixed(2)\">Elevation:{{this.targeElevation.toFixed(2)}} </button> \n  <button class=\"load\" [cdkCopyToClipboard]=\"this.targetPower.toFixed(2)\">Power:{{this.targetPower.toFixed(2)}} </button> <br>\n \n<button class=\"save\" (click)=\"SaveCords()\" >Save Values</button>\n \n\n</div>  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}