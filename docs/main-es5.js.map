{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/calculator/calculator.component.ts","webpack:///src/app/calculator/calculator.component.html","webpack:///src/app/embeded-map/embeded-map.component.ts","webpack:///src/app/embeded-map/embeded-map.component.html","webpack:///src/app/error.service.ts","webpack:///src/app/misc/misc.component.ts","webpack:///src/app/misc/misc.component.html","webpack:///src/app/point/point.component.ts","webpack:///src/app/point/point.component.html","webpack:///src/app/triangulator/triangulator.component.ts","webpack:///src/app/triangulator/triangulator.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CalculatorComponent","errorservice","Start","x","NaN","y","End","Telepad","isElevation","Elevation1","Elevation2","Power1","Power2","Bearing","hasResult","onCalculated","holopadUpdated$","subscribe","arg","document","SetTelepad","delta1","delta2","D1","Math","hypot","D2","bearing1","atan2","PI","bearing2","deltaBearing","round","deltaElevation","ceil","atan","sin","cos","p1","sqrt","p2","deltaPower","clamp","elev1","asin","elev2","Number","isNaN","ErrorsCalculated","power","elevation","bearing","tele_x","tele_y","value","min","max","calculateErrors","EmbededMapComponent","click","console","log","ErrorService","errorSource","holopadSource","blindSource","saveSource","saveEvent","asObservable","blindEvent","readyToPaste$","res","next","cords","providedIn","MiscComponent","errorService","cdr","save_iterator","savedCords","errorSerivce","label","window","prompt","push","toFixed","detectChanges","BlindMode","loadTelepad","PointComponent","point","cordsChange","raw","replace","reg","exec","length","parseInt","substr","emit","TriangulatorComponent","telepad","targetPower","targetBearing","targeElevation","Errors","TargetPos","SaveCords","target","error","POWERS","distance","parseFloat","result_bearing","num6","num7","RESULT","forEach","list","Array","correctedPower","found","i","check","num11","Object","create","result","Triangulate","num","possibleX","possibleY","BeginTriangulation","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'calculator';\r\n}\r\n","<div class=\"main\">\r\n\r\n\r\n  <div class=\"app\">\r\n    <div class=\"column\" style=\"background-color:rgb(156, 41, 250); color:rgb(255, 255, 255)\">\r\n      <app-calculator></app-calculator>\r\n    </div>\r\n    <div class=\"column\" style=\"background-color:rgb(151, 9, 194); color:rgb(255, 255, 255)\">\r\n      <app-triangulator></app-triangulator>\r\n    </div>\r\n    <div class=\"column\" style=\"background-color:rgb(98, 0, 155);color:rgb(255, 255, 255)\">\r\n      <app-misc></app-misc>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"hints\">\r\n\r\n    <h3>\r\n      Инструкция для маленьких\r\n    </h3>\r\n    <ol>\r\n      <li>Откройте панель телепада отверткой, используйте мультитул, закройте панель, используйте мультитул на консоль.\r\n      </li>\r\n      <li>Вставьте все блюспейс кристалы в консоль.</li>\r\n      <li>Выставьте Отклонение(Bearing) на 0, Подъем(Elevation) на 45, Силу(Power) на 25, Сектор(Sector) на 5.</li>\r\n      <li>Откройте воронку.</li>\r\n      <li>Возьмите два GPS, выставьте теги \"GPS1\" и \"GPS2\".</li>\r\n      <li>Перетащите pull'ом GPS1 в воронку.</li>\r\n      <li>Закройте воронку, смените Подъем на 50, снова откройте.</li>\r\n      <li>перетащите GPS2 в воронку.</li>\r\n      <li>Закрыть воронку.</li>\r\n      <li>Ввести координаты GPS1 и GPS2 в поля (X1,Y1), (X2,Y2).</li>\r\n      <li>Ввести позицию телепада (Если вы на Исходе можете нажать специальную кнопку).</li>\r\n      <li>Вычислить ошибки.</li>\r\n      <li>Ввести нужные координаты, нажать \"вычислить данные\", ввести их в консоль, бум и готово!</li>\r\n    </ol>\r\n\r\n\r\n    <h3>Особенности калькулятора</h3>\r\n\r\n    <ul>\r\n      <li>Рядом с полями ввода координат есть кнопки в виде точек, нажмите на них и можете вставлять координаты в виде\r\n        Telesciece Lab(145,160,2) или Unknown shuttle x=150, y=12, z=unknown\r\n        <br> Выделяйте строки в GPS или бумаге РД, копируйте и вставляйте.\r\n      </li>\r\n      <li>Если ошибки подсвечены красным, значит вы ошиблись в измерениях</li>\r\n      <li>Если ошибки подсвечены красным и вместо чисел NaN, значит вы забыли ввести координаты телепада или одной из\r\n        воронок</li>\r\n      <li>Слепой прыжок, загрузит в поля ошибок средние значения, это может помочь если у вас нету времени на калибровку\r\n      </li>\r\n    </ul>\r\n\r\n    <h4><a href=\"https://forum.taucetistation.org/t/telenauka-dlya-malenkih-i-ne-ochen/20515/15\">Путеводитель по\r\n        дереликтам и предложения для улучшения</a></h4>\r\n  </div>\r\n\r\n\r\n</div>\r\n<app-embeded-map></app-embeded-map>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CalculatorComponent } from './calculator/calculator.component';\r\nimport { PointComponent } from './point/point.component';\r\nimport { TriangulatorComponent } from './triangulator/triangulator.component';\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MiscComponent } from './misc/misc.component';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { EmbededMapComponent } from './embeded-map/embeded-map.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CalculatorComponent,\r\n    PointComponent,\r\n    TriangulatorComponent,\r\n    MiscComponent,\r\n    EmbededMapComponent,\r\n  ],\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule, MatFormFieldModule, MatSelectModule, ClipboardModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { ErrorService } from \"../error.service\";\r\nimport { fromEvent } from 'rxjs';\r\n@Component({\r\n  selector: 'app-calculator',\r\n  templateUrl: './calculator.component.html',\r\n  styleUrls: ['./calculator.component.scss']\r\n})\r\n\r\n\r\n\r\nexport class CalculatorComponent implements OnInit {\r\n\r\n\r\n\r\n  Start = { x: NaN, y: NaN };\r\n  End = { x: NaN, y: NaN };\r\n  Telepad = { x: NaN, y: NaN };\r\n\r\n  isElevation: Boolean = true;\r\n  Elevation1: number = 45;\r\n  Elevation2: number = 50;\r\n\r\n  Power1: number = 25;\r\n  Power2: number = 30;\r\n\r\n  Bearing: number = 0;\r\n\r\n  hasResult: Boolean = false;\r\n  deltaPower: number;\r\n  deltaBearing: number;\r\n  deltaElevation: number;\r\n\r\n  errorservice: ErrorService;\r\n\r\n\r\n  @Output() onCalculated = new EventEmitter<Record<string, number>>();\r\n\r\n  constructor(errorservice: ErrorService) {\r\n    this.errorservice = errorservice; this.errorservice.holopadUpdated$.subscribe(arg => {\r\n\r\n      this.Telepad.x = arg[0];\r\n      this.Telepad.y = arg[1];\r\n\r\n\r\n    }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    fromEvent(document, 'click').subscribe(() => this.errorservice.SetTelepad(this.Telepad.x, this.Telepad.y));\r\n  }\r\n\r\n\r\n\r\n  calculateErrors() {\r\n    let delta1 = {\r\n      x: this.Start.x - this.Telepad.x,\r\n      y: this.Start.y - this.Telepad.y,\r\n    };\r\n    let delta2 = {\r\n      x: this.End.x - this.Telepad.x,\r\n      y: this.End.y - this.Telepad.y,\r\n    };\r\n\r\n    let D1 = Math.hypot(delta1.x, delta1.y);\r\n    let D2 = Math.hypot(delta2.x, delta2.y);\r\n\r\n    let bearing1 = Math.atan2(delta1.x, delta1.y) * 180 / Math.PI;\r\n    let bearing2 = Math.atan2(delta2.x, delta2.y) * 180 / Math.PI;\r\n    this.deltaBearing = -Math.round((2 * this.Bearing - bearing1 - bearing2) / 2); //average\r\n    if (this.isElevation) {\r\n      this.deltaElevation = Math.ceil(\r\n        90 / Math.PI * Math.atan(\r\n          (D2 * Math.sin(Math.PI / 90 * this.Elevation1) - D1 * Math.sin(Math.PI / 90 * this.Elevation2)) / ///* fix vim highlighting here\r\n          (D1 * Math.cos(Math.PI / 90 * this.Elevation2) - D2 * Math.cos(Math.PI / 90 * this.Elevation1))\r\n        )\r\n      );\r\n\r\n      let p1 = Math.sqrt(10 * D1 / Math.sin(Math.PI / 90 * (this.Elevation1 + this.deltaElevation)));\r\n      let p2 = Math.sqrt(10 * D2 / Math.sin(Math.PI / 90 * (this.Elevation2 + this.deltaElevation)));\r\n      this.deltaPower = -Math.round((2 * this.Power1 - p1 - p2) / 2);\r\n    }\r\n    else {\r\n      this.deltaPower = this.clamp(Math.round((Math.sqrt(D2) * this.Power1 - Math.sqrt(D1) * this.Power2) / (Math.sqrt(D1) - Math.sqrt(D2))), -4, 0);\r\n\r\n      let elev1 = Math.asin(10 * D1 / (this.Power1 + this.deltaPower) ** 2) * 90 / Math.PI;\r\n      let elev2 = Math.asin(10 * D2 / (this.Power2 + this.deltaPower) ** 2) * 90 / Math.PI;\r\n\r\n      if (Number.isNaN(this.Elevation1)) {\r\n        this.deltaElevation = -Math.round(this.Elevation1 - elev2);\r\n      } else if (Number.isNaN(this.Elevation2)) {\r\n        this.deltaElevation = -Math.round(this.Elevation1 - elev1);\r\n      } else {\r\n        this.deltaElevation = -Math.round((2 * this.Elevation1 - elev1 - elev2) / 2);\r\n      }\r\n    }\r\n\r\n\r\n    this.errorservice.ErrorsCalculated({ power: this.deltaPower, elevation: this.deltaElevation, bearing: this.deltaBearing, tele_x: this.Telepad.x, tele_y: this.Telepad.y });\r\n    this.hasResult = true;\r\n  }\r\n  clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n  }\r\n\r\n  loadTelepad(x: number, y: number) {\r\n    this.Telepad.x = x;\r\n    this.Telepad.y = y;\r\n  }\r\n  calculateErrorsv() {\r\n\r\n  }\r\n\r\n}\r\n","<span>Сила<mat-slide-toggle [(ngModel)]=\"isElevation\"> \r\n    \r\n</mat-slide-toggle>Подъем</span> <br/>\r\n<div>\r\n\r\n<app-point  id=\"TELEPAD\" [(cords)]=\"Telepad\" [x_label]=\"'X Телепада'\" [y_label]=\"'Y Телепада'\"    ></app-point> <br>\r\n<app-point [(cords)]=\"Start\" [x_label]=\"'X1:'\" [y_label]=\"'Y1:'\"  ></app-point> <br/>\r\n<app-point [(cords)]=\"End\" [x_label]=\"'X2:'\" [y_label]=\"'Y2:'\"></app-point>   \r\n</div>\r\n<div >\r\n  <ng-template [ngIf]=\"isElevation\" [ngIfElse]=\"power\">\r\n  \r\n   <label>Подъем 1\r\n       <input type=\"number\" [(ngModel)]=\"Elevation1\" /> \r\n   </label>\r\n   <label>Подъем 2\r\n    <input type=\"number\" [(ngModel)]=\"Elevation2\" /> \r\n    </label>\r\n\r\n  </ng-template>\r\n  <ng-template #power>\r\n    <label>Сила 1 <select [(ngModel)]=\"Power1\">\r\n     <option value=\"5\">5</option>\r\n     <option value=\"10\">10</option>\r\n     <option value=\"20\">20</option>\r\n     <option value=\"25\">25</option>\r\n     <option value=\"30\">30</option>\r\n     <option value=\"40\">40</option>\r\n     <option value=\"50\">50</option>\r\n     <option value=\"80\">80</option>\r\n     <option value=\"100\">100</option>\r\n    </select>\r\n    </label>\r\n    <label>Сила 2 <select [(ngModel)]=\"Power2\">\r\n      <option value=\"5\">5</option>\r\n      <option value=\"10\">10</option>\r\n      <option value=\"20\">20</option>\r\n      <option value=\"25\">25</option>\r\n      <option value=\"30\">30</option>\r\n      <option value=\"40\">40</option>\r\n      <option value=\"50\">50</option>\r\n      <option value=\"80\">80</option>\r\n      <option value=\"100\">100</option>\r\n     </select>\r\n     </label>\r\n  </ng-template>\r\n</div>\r\n\r\n\r\n<label *ngIf=\"isElevation\">СИЛА<select [(ngModel)]=\"Power1\">\r\n  <option value=\"5\">5</option>\r\n  <option value=\"10\">10</option>\r\n  <option value=\"20\">20</option>\r\n  <option value=\"25\">25</option>\r\n  <option value=\"30\">30</option>\r\n  <option value=\"40\">40</option>\r\n  <option value=\"50\">50</option>\r\n  <option value=\"80\">80</option>\r\n  <option value=\"100\">100</option>\r\n </select>\r\n </label>\r\n\r\n<label *ngIf=\"!isElevation\">Подъем\r\n    <input type=\"number\" [(ngModel)]=\"Elevation1\" />  \r\n</label>\r\n\r\n<label>Отклонение\r\n    <input type=\"number\" [(ngModel)]=\"Bearing\" > \r\n</label>\r\n\r\n<br>\r\n<button (click)=\"calculateErrors()\">\r\n    Вычислить ошибки\r\n</button>\r\n\r\n<div *ngIf=\"hasResult\">\r\n  <p [style.background-color]=\"deltaBearing>=-10 && deltaBearing<=10 ? 'transparent' : 'red'\" >ΔBearing: {{deltaBearing}}</p> \r\n  <p [style.background-color]=\"deltaElevation>=-25 && deltaElevation<=25 ? 'transparent' : 'red'\" >ΔElevation: {{deltaElevation}}</p>\r\n  <p [style.background-color]=\"deltaPower>=-4 && deltaPower<=0 ? 'transparent' : 'red'\" >ΔPower: {{deltaPower}}</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'app-embeded-map',\n  templateUrl: './embeded-map.component.html',\n  styleUrls: ['./embeded-map.component.scss']\n})\nexport class EmbededMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n    fromEvent(document, 'click').subscribe(() =>this.click());\n  }\n\n  click()\n  {\n    console.log(\"test\");\n  }\n}\n","<iframe sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n    src=\"https://affectedarc07.github.io/SS13WebMap/TauCetiClassic/BoxStation/\"></iframe>","import { Injectable } from '@angular/core';\r\nimport { Subject }    from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n\r\n  private errorSource= new Subject<Record<string,number>>();\r\n  private holopadSource= new Subject<Array<number>>();\r\n  private blindSource= new Subject<void>();\r\n  private saveSource=new Subject<{bearing:number,elevation:number,power:number}>();\r\n  saveEvent= this.saveSource.asObservable();\r\n  blindEvent = this.blindSource.asObservable();\r\n  readyToPaste$= this.errorSource.asObservable();\r\n  holopadUpdated$=this.holopadSource.asObservable();\r\n\r\n\r\n  public ErrorsCalculated(res: Record<string,number>)\r\n  {\r\n    this.errorSource.next(res);\r\n  }\r\n\r\n  public SaveCords(cords:{bearing:number,elevation:number,power:number})\r\n  {\r\n    this.saveSource.next(cords);\r\n  }\r\n  public SetTelepad(x:number,y:number)\r\n  {\r\n     this.holopadSource.next([x,y]);\r\n  }\r\n  public BlindMode()\r\n  {\r\n    this.blindSource.next();\r\n  }\r\n\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit,ChangeDetectorRef } from '@angular/core';\r\nimport { ErrorService } from '../error.service';\r\n\r\n@Component({\r\n  selector: 'app-misc',\r\n  templateUrl: './misc.component.html',\r\n  styleUrls: ['./misc.component.scss']\r\n})\r\nexport class MiscComponent implements OnInit {\r\n   errorSerivce:ErrorService;\r\n   save_iterator=0;\r\n   savedCords: {label:string,id:number,bearing: string,elevation: string,power: string}[] = [];\r\n\r\n\r\n  constructor(errorService:ErrorService, private cdr:ChangeDetectorRef ) { \r\n      this.errorSerivce=errorService;\r\n      errorService.saveEvent\r\n      .subscribe(arg => {\r\n         let label=window.prompt(\"Введите название\",\"Позиция\");\r\n         if (!label) return;\r\n         this.savedCords.push({label:label,id:this.save_iterator,\r\n          bearing: arg.bearing.toFixed(2),\r\n          elevation: arg.elevation.toFixed(2),\r\n          power: arg.power.toFixed(2)});\r\n          cdr.detectChanges();\r\n          \r\n      }\r\n      );\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  loadTelepad(x:number,y:number)\r\n  { \r\n  \r\n     this.errorSerivce.SetTelepad(x,y);\r\n  }\r\n  BlindMode()\r\n  {\r\n     this.errorSerivce.BlindMode();\r\n  }\r\n\r\n}\r\n","<button (click)=\"loadTelepad(170,133)\">Загрузить позицию телепада для \"Исхода\"</button> <br>\r\n<button (click)=\"BlindMode()\">Слепой прыжок!</button>Ввести средние значения ошибок<br>\r\n<ul>\r\n    <li *ngFor=\"let cord of savedCords\"> {{cord.label}}\r\n         <button style=\"width: 100px;\" [cdkCopyToClipboard]=\"cord.bearing\">Отклонение: <br>{{cord.bearing}} </button>        \r\n         <button style=\"width: 100px;\" [cdkCopyToClipboard]=\"cord.elevation\">Подъем: <br>{{cord.elevation}} </button>        \r\n         <button style=\"width: 100px;\" [cdkCopyToClipboard]=\"cord.power\">Сила: <br>{{cord.power}} </button>        \r\n    </li>\r\n</ul>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n@Component({\r\n  selector: 'app-point',\r\n  templateUrl: './point.component.html',\r\n  styleUrls: ['./point.component.scss']\r\n})\r\nexport class PointComponent implements OnInit {\r\n\r\n  @Input() x_label: string;\r\n  @Input() y_label: string;\r\n\r\n\r\n  point = { x: 0, y: 0 };\r\n\r\n  @Output() cordsChange = new EventEmitter();\r\n  @Input()\r\n  get cords() {\r\n    return this.point;\r\n  }\r\n  set cords(value) {\r\n    this.point = value;\r\n    this.cordsChange.emit(this.cords);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  enterRaw() {\r\n    let raw: string = prompt(\"Enter coordinated like Any(x,y,z)\").replace(/\\s/g, \"\");;\r\n\r\n    let reg = /\\((\\d*),(\\d*),\\d*\\)/i;\r\n    let res = reg.exec(raw);\r\n    if (res && res.length == 3) {\r\n      this.cords = { x: Number.parseInt(res[1]), y: Number.parseInt(res[2]) };\r\n    }\r\n\r\n    else {\r\n      this.cords = { x: Number.parseInt(/x=\\d*/.exec(raw)[0].substr(2)), y: Number.parseInt(/y=\\d*/.exec(raw)[0].substr(2)) }\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<button (click)=\"this.enterRaw()\"></button>\r\n<label>{{x_label}}\r\n    <input [(ngModel)]=\"cords.x\" type=\"number\" />\r\n</label>\r\n<label>{{y_label}}\r\n    <input [(ngModel)]=\"cords.y\" type=\"number\" />\r\n</label>","import { Component, OnInit } from '@angular/core';\r\nimport { ErrorService } from '../error.service';\r\n\r\n@Component({\r\n  selector: 'app-triangulator',\r\n  templateUrl: './triangulator.component.html',\r\n  styleUrls: ['./triangulator.component.scss']\r\n})\r\nexport class TriangulatorComponent implements OnInit {\r\n\r\n  telepad = { x: NaN, y: NaN };\r\n\r\n\r\n  targetPower: number = NaN;\r\n  targetBearing: number = NaN;\r\n  targeElevation: number = NaN;\r\n  hasResult: Boolean = false;\r\n\r\n  errorService: ErrorService;\r\n  Errors = { power: NaN, bearing: NaN, elevation: NaN }\r\n  TargetPos = { x: NaN, y: NaN };\r\n\r\n\r\n  constructor(errorService: ErrorService) {\r\n    this.errorService = errorService;\r\n    errorService.readyToPaste$\r\n      .subscribe(arg => {\r\n\r\n        this.Errors = { power: arg[\"power\"], bearing: arg[\"bearing\"], elevation: arg[\"elevation\"] }\r\n\r\n        this.telepad.x = arg[\"tele_x\"];\r\n        this.telepad.y = arg[\"tele_y\"];\r\n\r\n      }\r\n      );\r\n    errorService.holopadUpdated$\r\n      .subscribe(arg => {\r\n\r\n        this.telepad.x = arg[0];\r\n        this.telepad.y = arg[1];\r\n      }\r\n      );\r\n    errorService.blindEvent\r\n      .subscribe(arg => {\r\n\r\n        this.Errors.bearing = 0;\r\n        this.Errors.elevation = 0;\r\n        this.Errors.power = -2;\r\n      }\r\n      );\r\n\r\n\r\n  }\r\n\r\n  SaveCords() {\r\n    this.errorService.SaveCords({ bearing: this.targetBearing, elevation: this.targeElevation, power: this.targetPower });\r\n  }\r\n\r\n  Triangulate(target: Record<string, number>, telepad: Record<string, number>, error: Record<string, number>) {\r\n\r\n    const POWERS = [5, 10, 20, 25, 30, 40, 50, 80, 100];\r\n    let distance = Math.hypot(target.x - telepad.x, target.y - telepad.y);\r\n\r\n    var bearing = 180.0 * Math.atan2(target.y - telepad.y, target.x - telepad.x) / Math.PI;\r\n    bearing = parseFloat((90 - bearing).toFixed(2));\r\n    bearing = bearing < 0 ? bearing+ 360 : bearing;\r\n    let result_bearing = bearing - error.bearing;\r\n    let num6 = error.elevation < 0 ? 1 : 45;\r\n    let num7 = error.elevation < 0 ? 45 : 90;\r\n    let RESULT= {\r\n      bearing: NaN,\r\n      elevation: NaN,\r\n      power: NaN\r\n      \r\n    }\r\n    \r\n    POWERS.forEach(power => {\r\n      let list: Array<number> = new Array();\r\n      let correctedPower = power + error.power;\r\n      let found = false;\r\n      for (let i = num6; i <= num7; i += 0.1) {\r\n\r\n        if (this.check(bearing, i, correctedPower, target.x - telepad.x, target.y - telepad.y)) {\r\n          list.push(i);\r\n          found = true;\r\n        }\r\n      }\r\n      if (found) {\r\n        list.forEach(elevation => {\r\n          let num11 = elevation;\r\n          num6 += num11;\r\n        });\r\n        RESULT.bearing = result_bearing;\r\n        RESULT.elevation =  (Math.round(num6) / list.length) - error.elevation\r\n        RESULT.power = power;\r\n        return RESULT;\r\n      }\r\n    });\r\n\r\n\r\n    return RESULT;\r\n  }\r\n  BeginTriangulation(): void {\r\n\r\n    var target = Object.create(this.TargetPos);\r\n\r\n    var result = this.Triangulate(target, this.telepad, this.Errors);\r\n    this.targeElevation = result[\"elevation\"];\r\n    this.targetPower = result[\"power\"];\r\n    this.targetBearing = result[\"bearing\"];\r\n    this.hasResult = true;\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  check(bearing: number, elevation: number, power: number, x: number, y: number): boolean {\r\n    let num = power * power / 10 * Math.sin(Math.PI * elevation / 90);\r\n    let possibleX = Math.round(num * Math.sin(Math.PI * bearing / 180));\r\n    let possibleY = Math.round(num * Math.cos(Math.PI * bearing / 180));\r\n\r\n    return (possibleX == x) && (possibleY == y);\r\n  }\r\n\r\n}\r\n","<p>Посчитайте ошибки или вставьте значения ниже</p>\r\n<table class=\"tg\">\r\n  <tbody>\r\n    <tr>\r\n      <td><label>ΔОТКЛОНЕНИЕ</label></td>\r\n      <td> <input type=\"number\" [(ngModel)]=\"Errors.bearing\" /> </td>\r\n    </tr>\r\n    <tr>\r\n      <td><label>ΔПОДЪЕМ</label></td>\r\n      <td><input type=\"number\" [(ngModel)]=\"Errors.elevation\" /> </td>\r\n    </tr>\r\n    <tr>\r\n      <td><label>ΔСИЛА</label></td>\r\n      <td> <input type=\"number\" [(ngModel)]=\"Errors.power\" /> </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n\r\n\r\n\r\n\r\n<p>Введите координаты, куда нужно телепортироваться</p>\r\n<div class=\"target\">\r\n  <app-point [(cords)]=\"TargetPos\" [x_label]=\"'X Цели'\" [y_label]=\"'Y Цели'\"></app-point>\r\n</div><br>\r\n<button (click)=\"BeginTriangulation()\">Вычислить данные</button>\r\n\r\n\r\n<div *ngIf=\"hasResult\">\r\n  <button class=\"load\" [cdkCopyToClipboard]=\"this.targetBearing.toFixed(2)\">Отклонение:{{this.targetBearing.toFixed(2)}}\r\n  </button>\r\n  <button class=\"load\" [cdkCopyToClipboard]=\"this.targeElevation.toFixed(2)\">Подъем:{{this.targeElevation.toFixed(2)}}\r\n  </button>\r\n  <button class=\"load\" [cdkCopyToClipboard]=\"this.targetPower.toFixed(2)\">Сила:{{this.targetPower.toFixed(2)}} </button>\r\n  <br>\r\n\r\n  <button class=\"save\" (click)=\"SaveCords()\">Сохранить данные</button>\r\n\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}