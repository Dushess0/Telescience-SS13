{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/calculator/calculator.component.ts","./src/app/calculator/calculator.component.html","./src/app/embeded-map/embeded-map.component.ts","./src/app/embeded-map/embeded-map.component.html","./src/app/error.service.ts","./src/app/misc/misc.component.ts","./src/app/misc/misc.component.html","./src/app/point/point.component.ts","./src/app/point/point.component.html","./src/app/triangulator/triangulator.component.ts","./src/app/triangulator/triangulator.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEAGE;QAAA,yEACE;QAAA,yEACE;QAAA,4EAAiC;QACnC,4DAAM;QACN,yEACE;QAAA,8EAAqC;QACvC,4DAAM;QACN,yEACE;QAAA,sEAAqB;QACvB,4DAAM;QACR,4DAAM;QAEN,yEAEE;QAAA,qEACE;QAAA,oMACF;QAAA,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,goBACJ;QAAA,4DAAK;QACL,sEAAI;QAAA,oRAAyC;QAAA,4DAAK;QAClD,sEAAI;QAAA,uXAAoG;QAAA,4DAAK;QAC7G,sEAAI;QAAA,wJAAiB;QAAA,4DAAK;QAC1B,sEAAI;QAAA,8OAAiD;QAAA,4DAAK;QAC1D,sEAAI;QAAA,kMAAkC;QAAA,4DAAK;QAC3C,sEAAI;QAAA,0UAAuD;QAAA,4DAAK;QAChE,sEAAI;QAAA,gLAA0B;QAAA,4DAAK;QACnC,sEAAI;QAAA,kJAAgB;QAAA,4DAAK;QACzB,sEAAI;QAAA,gOAAsD;QAAA,4DAAK;QAC/D,sEAAI;QAAA,ycAA6E;QAAA,4DAAK;QACtF,sEAAI;QAAA,wJAAiB;QAAA,4DAAK;QAC1B,sEAAI;QAAA,8eAAuF;QAAA,4DAAK;QAClG,4DAAK;QAGL,sEAAI;QAAA,uMAAwB;QAAA,4DAAK;QAEjC,sEACE;QAAA,sEAAI;QAAA,0rBAEF;QAAA,iEAAK;QAAA,sWACP;QAAA,4DAAK;QACL,sEAAI;QAAA,yYAA+D;QAAA,4DAAK;QACxE,sEAAI;QAAA,qoBACK;QAAA,4DAAK;QACd,sEAAI;QAAA,knBACJ;QAAA,4DAAK;QACP,4DAAK;QAEL,sEAAI;QAAA,wEAAyF;QAAA,kWACnD;QAAA,4DAAI;QAAA,4DAAK;QACrD,4DAAM;QAGR,4DAAM;QACN,8EAAmC;;6FDnDtB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAC6B;AACd;AACT;AACF;AAC2B;AACf;AACqB;AACZ;AACP;AACL;AACG;AACiB;;AAoBnE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,mFAAoB;YACpB,0DAAW;YACX,uEAAa;YACb,oEAAgB,EAAE,+EAAkB,EAAE,yEAAe,EAAE,uEAAe;SACvE;mIAIU,SAAS,mBAhBlB,2DAAY;QACZ,oFAAmB;QACnB,qEAAc;QACd,0FAAqB;QACrB,mEAAa;QACb,uFAAmB,aAGnB,mFAAoB;QACpB,0DAAW;QACX,uEAAa;QACb,oEAAgB,EAAE,+EAAkB,EAAE,yEAAe,EAAE,uEAAe;6FAK7D,SAAS;cAlBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,oFAAmB;oBACnB,qEAAc;oBACd,0FAAqB;oBACrB,mEAAa;oBACb,uFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,mFAAoB;oBACpB,0DAAW;oBACX,uEAAa;oBACb,oEAAgB,EAAE,+EAAkB,EAAE,yEAAe,EAAE,uEAAe;iBACvE;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAGvC;;;;;;;;;ICS9B,wEAAO;IAAA,kGACH;IAAA,2EACJ;IADyB,6VAAwB;IAA7C,4DACJ;IAAA,4DAAQ;IACR,wEAAO;IAAA,kGACN;IAAA,2EACA;IADqB,6VAAwB;IAA7C,4DACA;IAAA,4DAAQ;;;IAJgB,0DAAwB;IAAxB,sFAAwB;IAG3B,0DAAwB;IAAxB,sFAAwB;;;;IAK7C,wEAAO;IAAA,sFAAO;IAAA,4EACb;IADqB,2VAAoB;IACzC,4EAAkB;IAAA,4DAAC;IAAA,4DAAS;IAC5B,4EAAmB;IAAA,6DAAE;IAAA,4DAAS;IAC9B,6EAAmB;IAAA,6DAAE;IAAA,4DAAS;IAC9B,6EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAoB;IAAA,+DAAG;IAAA,4DAAS;IACjC,4DAAS;IACT,4DAAQ;IACR,yEAAO;IAAA,uFAAO;IAAA,6EACZ;IADoB,8VAAoB;IACxC,6EAAkB;IAAA,6DAAC;IAAA,4DAAS;IAC5B,6EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAoB;IAAA,+DAAG;IAAA,4DAAS;IACjC,4DAAS;IACT,4DAAQ;;;IAvBa,0DAAoB;IAApB,kFAAoB;IAYpB,2DAAoB;IAApB,kFAAoB;;;;IAgB9C,wEAA2B;IAAA,mFAAI;IAAA,4EAC7B;IADqC,uVAAoB;IACzD,4EAAkB;IAAA,4DAAC;IAAA,4DAAS;IAC5B,4EAAmB;IAAA,6DAAE;IAAA,4DAAS;IAC9B,6EAAmB;IAAA,6DAAE;IAAA,4DAAS;IAC9B,6EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAmB;IAAA,8DAAE;IAAA,4DAAS;IAC9B,8EAAoB;IAAA,+DAAG;IAAA,4DAAS;IACjC,4DAAS;IACT,4DAAQ;;;IAX8B,0DAAoB;IAApB,kFAAoB;;;;IAa3D,wEAA4B;IAAA,gGACxB;IAAA,2EACJ;IADyB,0VAAwB;IAA7C,4DACJ;IAAA,4DAAQ;;;IADiB,0DAAwB;IAAxB,sFAAwB;;;IAYjD,sEACE;IAAA,oEAA6F;IAAA,uDAA0B;IAAA,4DAAI;IAC3H,oEAAiG;IAAA,uDAA8B;IAAA,4DAAI;IACnI,oEAAuF;IAAA,uDAAsB;IAAA,4DAAI;IACnH,4DAAM;;;IAHD,0DAAwF;IAAxF,iKAAwF;IAAE,0DAA0B;IAA1B,4GAA0B;IACpH,0DAA4F;IAA5F,qKAA4F;IAAE,0DAA8B;IAA9B,gHAA8B;IAC5H,0DAAkF;IAAlF,2JAAkF;IAAE,0DAAsB;IAAtB,wGAAsB;;ADlExG,MAAM,mBAAmB;IA2B9B,YAAY,YAAyB;QAvBrC,UAAK,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC;QACtB,QAAG,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC;QACpB,YAAO,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC;QAExB,gBAAW,GAAS,IAAI,CAAC;QACzB,eAAU,GAAQ,EAAE,CAAC;QACrB,eAAU,GAAQ,EAAE,CAAC;QAErB,WAAM,GAAQ,EAAE,CAAC;QACjB,WAAM,GAAQ,EAAE,CAAC;QAEjB,YAAO,GAAQ,CAAC,CAAC;QAEjB,cAAS,GAAS,KAAK,CAAC;QAQd,iBAAY,GAAE,IAAI,0DAAY,EAAyB,CAAC;QAEzB,IAAI,CAAC,YAAY,GAAC,YAAY,CAAC;QAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAEzH,IAAI,CAAC,OAAO,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAG1B,CAAC,CACA,CAAC;IAAC,CAAC;IAEF,QAAQ;QAEN,sDAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3G,CAAC;IAID,eAAe;QAEb,IAAI,MAAM,GAAG;YACX,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,CAAC,EAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;SAClC,CAAC;QACF,IAAI,MAAM,GAAG;YACX,CAAC,EAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,CAAC,EAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/B,CAAC;QAEF,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAExC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QAC9D,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QAC9D,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS;QACxF,IAAI,IAAI,CAAC,WAAW,EACpB;YACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAC9B,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CACtB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAE,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,8BAA8B;gBAC7H,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAC9F,CACF,CAAC;YAEF,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAChG,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAChG,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;SAChE;aAED;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEjJ,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,UAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YACpF,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,UAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YAEpF,IAAG,MAAM,CAAC,KAAK,CAAE,IAAI,CAAC,UAAU,CAAC,EAAE;gBACjC,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;aAC7D;iBAAM,IAAG,MAAM,CAAC,KAAK,CAAE,IAAI,CAAC,UAAU,CAAC,EAAE;gBACxC,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;aAC7D;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAI,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/E;SACF;QAGD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAC,KAAK,EAAC,IAAI,CAAC,UAAU,EAAC,SAAS,EAAC,IAAI,CAAC,cAAc,EAAC,OAAO,EAAC,IAAI,CAAC,YAAY,EAAE,MAAM,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAC,MAAM,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC;QACjK,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;IACtB,CAAC;IACD,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG;QACnB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,WAAW,CAAC,CAAQ,EAAC,CAAQ;QAE3B,IAAI,CAAC,OAAO,CAAC,CAAC,GAAC,CAAC,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAC,CAAC,CAAC;IACnB,CAAC;;sFArGU,mBAAmB;mGAAnB,mBAAmB;QCZhC,uEAAM;QAAA,mFAAI;QAAA,sFAES;QAFS,uMAAyB;QAErD,4DAAmB;QAAA,+FAAM;QAAA,4DAAO;QAAC,gEACjC;QAAA,sEAEA;QAAA,+EAA+G;QAAtF,wLAAmB;QAAuD,4DAAY;QAAC,gEAChH;QAAA,+EAA+E;QAApE,sLAAiB;QAAuC,4DAAY;QAAC,gEAChF;QAAA,gFAA2E;QAAhE,qLAAe;QAAqC,4DAAY;QAC3E,4DAAM;QACN,uEACE;QAAA,iIAEC;QAQD,8MACE;QAyBJ,4DAAM;QAGN,sHAA2B;QAa3B,qHAA4B;QAI5B,yEAAO;QAAA,yHACH;QAAA,4EACJ;QADyB,yLAAqB;QAA1C,4DACJ;QAAA,4DAAQ;QAER,iEACA;QAAA,6EACI;QADI,4IAAS,qBAAiB,IAAC;QAC/B,0JACJ;QAAA,4DAAS;QAET,iHACE;;;QA5E0B,0DAAyB;QAAzB,oFAAyB;QAK5B,0DAAmB;QAAnB,8EAAmB;QACjC,0DAAiB;QAAjB,4EAAiB;QACjB,0DAAe;QAAf,0EAAe;QAGX,0DAAoB;QAApB,iFAAoB;QAuC5B,0DAAmB;QAAnB,iFAAmB;QAanB,0DAAoB;QAApB,kFAAoB;QAKF,0DAAqB;QAArB,gFAAqB;QAQzC,0DAAiB;QAAjB,+EAAiB;;6FD/DT,mBAAmB;cAR/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;kBA6BE,oDAAM;;;;;;;;;;;;;;AErCT;AAAA;AAAA;AAAA;AAAkD;AACjB;;AAO1B,MAAM,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;QAEN,sDAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,KAAK;QAEH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;;sFAZU,mBAAmB;mGAAnB,mBAAmB;QCRhC,uEACyF;;6FDO5E,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAA2C;AACT;;AAK3B,MAAM,YAAY;IAgCvB;QA7BQ,gBAAW,GAAE,IAAI,4CAAO,EAAyB,CAAC;QAClD,kBAAa,GAAE,IAAI,4CAAO,EAAiB,CAAC;QAC5C,gBAAW,GAAE,IAAI,4CAAO,EAAQ,CAAC;QACjC,eAAU,GAAC,IAAI,4CAAO,EAAkD,CAAC;QACjF,cAAS,GAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAC1C,eAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAC7C,kBAAa,GAAE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAC/C,oBAAe,GAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IAsBlC,CAAC;IAnBV,gBAAgB,CAAC,GAA0B;QAEhD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAEM,SAAS,CAAC,KAAoD;QAEnE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACM,UAAU,CAAC,CAAQ,EAAC,CAAQ;QAEhC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IACM,SAAS;QAEd,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;;wEA7BU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;ICGhE,qEAAqC;IAAA,uDAChC;IAAA,4EAAkE;IAAA,yHAAY;IAAA,gEAAI;IAAA,uDAAiB;IAAA,4DAAS;IAC5G,4EAAoE;IAAA,iGAAQ;IAAA,gEAAI;IAAA,uDAAmB;IAAA,4DAAS;IAC5G,6EAAgE;IAAA,sFAAM;IAAA,iEAAI;IAAA,wDAAe;IAAA,4DAAS;IACvG,4DAAK;;;IAJgC,0DAChC;IADgC,yFAChC;IAA8B,0DAAmC;IAAnC,+FAAmC;IAAiB,0DAAiB;IAAjB,0FAAiB;IACrE,0DAAqC;IAArC,iGAAqC;IAAa,0DAAmB;IAAnB,4FAAmB;IACrE,0DAAiC;IAAjC,6FAAiC;IAAW,0DAAe;IAAf,wFAAe;;ADE3F,MAAM,aAAa;IAMxB,YAAY,YAAyB,EAAU,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;QAJnE,kBAAa,GAAC,CAAC,CAAC;QAChB,eAAU,GAA+E,EAAE,CAAC;QAIzF,IAAI,CAAC,YAAY,GAAC,YAAY,CAAC;QAC/B,YAAY,CAAC,SAAS;aACrB,SAAS,CAAC,GAAG,CAAC,EAAE;YACd,IAAI,KAAK,GAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAC,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,KAAK;gBAAE,OAAO;YACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,KAAK,EAAC,EAAE,EAAC,IAAI,CAAC,aAAa;gBACtD,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/B,SAAS,EAAE,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBACnC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YAC9B,GAAG,CAAC,aAAa,EAAE,CAAC;QAExB,CAAC,CACA,CAAC;IAGN,CAAC;IACD,QAAQ;IACR,CAAC;IAED,WAAW,CAAC,CAAQ,EAAC,CAAQ;QAG1B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IACD,SAAS;QAEN,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;IACjC,CAAC;;0EAlCU,aAAa;6FAAb,aAAa;QCR1B,4EAAuC;QAA/B,qIAAS,gBAAY,GAAG,EAAC,GAAG,CAAC,IAAC;QAAC,yQAAuC;QAAA,4DAAS;QAAC,gEACxF;QAAA,4EAA8B;QAAtB,qIAAS,eAAW,IAAC;QAAC,qIAAc;QAAA,4DAAS;QAAA,gOAA8B;QAAA,gEACnF;QAAA,qEACI;QAAA,wGAAqC;QAKzC,4DAAK;;QALG,0DAA+B;QAA/B,mFAA+B;;6FDK1B,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAyD;AACJ;;;AAM9C,MAAM,cAAc;IAkBzB;QAZA,UAAK,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAEb,gBAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;IAU3B,CAAC;IATjB,IACI,KAAK;QACP,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACD,IAAI,KAAK,CAAC,KAAK;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAID,QAAQ;QACN,IAAI,GAAG,GAAW,MAAM,CAAC,mCAAmC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAAA,CAAC;QAElF,IAAI,GAAG,GAAG,sBAAsB,CAAC;QACjC,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;SACzE;aAEI;YACH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;SACxH;IACH,CAAC;IAGD,QAAQ;IACR,CAAC;;4EApCU,cAAc;8FAAd,cAAc;QCP3B,4EAA2C;QAAnC,sIAAS,cAAe,IAAC;QAAC,4DAAS;QAC3C,wEAAO;QAAA,uDACH;QAAA,2EACJ;QADW,mLAAqB;QAA5B,4DACJ;QAAA,4DAAQ;QACR,wEAAO;QAAA,uDACH;QAAA,2EACJ;QADW,mLAAqB;QAA5B,4DACJ;QAAA,4DAAQ;;QALD,0DACH;QADG,sFACH;QAAO,0DAAqB;QAArB,gFAAqB;QAEzB,0DACH;QADG,sFACH;QAAO,0DAAqB;QAArB,gFAAqB;;6FDEnB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;kBAGE,mDAAK;;kBACL,mDAAK;;kBAKL,oDAAM;;kBACN,mDAAK;;;;;;;;;;;;;;AEhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;IC6BlD,sEACE;IAAA,4EAA0E;IAAA,uDAC1E;IAAA,4DAAS;IACT,4EAA2E;IAAA,uDAC3E;IAAA,4DAAS;IACT,4EAAwE;IAAA,uDAAqC;IAAA,4DAAS;IACtH,gEAEA;IAAA,4EAA2C;IAAtB,0TAAqB;IAAC,sJAAgB;IAAA,4DAAS;IAGtE,4DAAM;;;IAViB,0DAAoD;IAApD,+GAAoD;IAAC,0DAC1E;IAD0E,uKAC1E;IACqB,0DAAqD;IAArD,gHAAqD;IAAC,0DAC3E;IAD2E,gJAC3E;IACqB,0DAAkD;IAAlD,6GAAkD;IAAC,0DAAqC;IAArC,iIAAqC;;AD1BxG,MAAM,qBAAqB;IAoBhC,YAAY,YAA0B;QAbtC,YAAO,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;QAG7B,gBAAW,GAAW,GAAG,CAAC;QAC1B,kBAAa,GAAW,GAAG,CAAC;QAC5B,mBAAc,GAAW,GAAG,CAAC;QAC7B,cAAS,GAAY,KAAK,CAAC;QAG3B,WAAM,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE;QACrD,cAAS,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;QAI7B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,YAAY,CAAC,aAAa;aACvB,SAAS,CAAC,GAAG,CAAC,EAAE;YAEf,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,WAAW,CAAC,EAAE;YAE3F,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEjC,CAAC,CACA,CAAC;QACJ,YAAY,CAAC,eAAe;aACzB,SAAS,CAAC,GAAG,CAAC,EAAE;YAEf,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CACA,CAAC;QACJ,YAAY,CAAC,UAAU;aACpB,SAAS,CAAC,GAAG,CAAC,EAAE;YAEf,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACzB,CAAC,CACA,CAAC;IAGN,CAAC;IAED,SAAS;QACP,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IACxH,CAAC;IAED,WAAW,CAAC,MAA8B,EAAE,OAA+B,EAAE,KAA6B,EAAE,OAAgB;QAE1H,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACpD,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;QACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAE9C,wDAAwD;QACxD,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;YACpB,IAAI,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,GAAG,UAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,EAAI,CAAC,EAAC,CAAC;YACjF,IAAI,aAAa,GAAG,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;YAChD,IAAI,YAAY,GAAG,EAAE,GAAG,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;YACpD,IAAI,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;YAC7E,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;YAChD,IAAI,QAAQ,GAAG,CAAC,aAAa,GAAG,CAAC,IAAI,aAAa,GAAG,EAAE,CAAC,CAAC;YACzD,IAAI,OAAO,GAAG,CAAC,YAAY,GAAG,CAAC,IAAI,YAAY,GAAG,EAAE,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,EAAE;gBACrD,IAAI,GAAG,GAAG;oBACR,OAAO,EAAE,OAAO;oBAChB,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY;oBAClD,KAAK,EAAE,CAAC;iBACT,CAAC;gBAEF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,OAAO;oBACV,OAAO,GAAG,CAAC;gBACb,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC9E,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC9E,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aAC7D;SACF;QAED,OAAO;YACL,OAAO,EAAE,GAAG;YACZ,SAAS,EAAE,GAAG;YACd,KAAK,EAAE,GAAG;SACX,CAAC;IACJ,CAAC;IACD,kBAAkB;QAEhB,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE3C,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAGxB,CAAC;IAGD,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK;QAC1B,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC9C,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAClE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAE5D,IAAI,QAAQ,GAAG,GAAG,GAAG,cAAK,EAAI,CAAC,IAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAEhE,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QACpF,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAEpF,OAAO;YACL,CAAC,EAAE,OAAO;YACV,CAAC,EAAE,OAAO;SACX,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG;QACnB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC;IACD,QAAQ;IACR,CAAC;;0FA/HU,qBAAqB;qGAArB,qBAAqB;QCRlC,oEAAG;QAAA,0SAA4C;QAAA,4DAAI;QACnD,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,qEAAI;QAAA,wEAAO;QAAA,6HAAW;QAAA,4DAAQ;QAAA,4DAAK;QACnC,qEAAK;QAAA,2EAAqD;QAAhC,iMAA4B;QAAjD,4DAAqD;QAAA,4DAAK;QACjE,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,yEAAO;QAAA,sGAAO;QAAA,4DAAQ;QAAA,4DAAK;QAC/B,sEAAI;QAAA,4EAAuD;QAAlC,oMAA8B;QAAnD,4DAAuD;QAAA,4DAAK;QAClE,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,yEAAO;QAAA,0FAAK;QAAA,4DAAQ;QAAA,4DAAK;QAC7B,sEAAK;QAAA,4EAAmD;QAA9B,gMAA0B;QAA/C,4DAAmD;QAAA,4DAAK;QAC/D,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QAMR,qEAAG;QAAA,mUAAgD;QAAA,4DAAI;QACvD,0EACE;QAAA,gFAAuF;QAA5E,6LAAqB;QAA2C,4DAAY;QACzF,4DAAM;QAAA,iEACN;QAAA,6EAAuC;QAA/B,8IAAS,wBAAoB,IAAC;QAAC,uJAAgB;QAAA,4DAAS;QAGhE,oHACE;;QAzB8B,0DAA4B;QAA5B,uFAA4B;QAI7B,0DAA8B;QAA9B,yFAA8B;QAI7B,0DAA0B;QAA1B,qFAA0B;QAW7C,0DAAqB;QAArB,gFAAqB;QAK7B,0DAAiB;QAAjB,+EAAiB;;6FDrBT,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'calculator';\r\n}\r\n","<div class=\"main\">\r\n\r\n\r\n  <div class=\"app\">\r\n    <div class=\"column\" style=\"background-color:rgb(156, 41, 250); color:rgb(255, 255, 255)\">\r\n      <app-calculator></app-calculator>\r\n    </div>\r\n    <div class=\"column\" style=\"background-color:rgb(151, 9, 194); color:rgb(255, 255, 255)\">\r\n      <app-triangulator></app-triangulator>\r\n    </div>\r\n    <div class=\"column\" style=\"background-color:rgb(98, 0, 155);color:rgb(255, 255, 255)\">\r\n      <app-misc></app-misc>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"hints\">\r\n\r\n    <h3>\r\n      Инструкция для маленьких\r\n    </h3>\r\n    <ol>\r\n      <li>Откройте панель телепада отверткой, используйте мультитул, закройте панель, используйте мультитул на консоль.\r\n      </li>\r\n      <li>Вставьте все блюспейс кристалы в консоль.</li>\r\n      <li>Выставьте Отклонение(Bearing) на 0, Подъем(Elevation) на 45, Силу(Power) на 25, Сектор(Sector) на 5.</li>\r\n      <li>Откройте воронку.</li>\r\n      <li>Возьмите два GPS, выставьте теги \"GPS1\" и \"GPS2\".</li>\r\n      <li>Перетащите pull'ом GPS1 в воронку.</li>\r\n      <li>Закройте воронку, смените Подъем на 50, снова откройте.</li>\r\n      <li>перетащите GPS2 в воронку.</li>\r\n      <li>Закрыть воронку.</li>\r\n      <li>Ввести координаты GPS1 и GPS2 в поля (X1,Y1), (X2,Y2).</li>\r\n      <li>Ввести позицию телепада (Если вы на Исходе можете нажать специальную кнопку).</li>\r\n      <li>Вычислить ошибки.</li>\r\n      <li>Ввести нужные координаты, нажать \"вычислить данные\", ввести их в консоль, бум и готово!</li>\r\n    </ol>\r\n\r\n\r\n    <h3>Особенности калькулятора</h3>\r\n\r\n    <ul>\r\n      <li>Рядом с полями ввода координат есть кнопки в виде точек, нажмите на них и можете вставлять координаты в виде\r\n        Telesciece Lab(145,160,2) или Unknown shuttle x=150, y=12, z=unknown\r\n        <br> Выделяйте строки в GPS или бумаге РД, копируйте и вставляйте.\r\n      </li>\r\n      <li>Если ошибки подсвечены красным, значит вы ошиблись в измерениях</li>\r\n      <li>Если ошибки подсвечены красным и вместо чисел NaN, значит вы забыли ввести координаты телепада или одной из\r\n        воронок</li>\r\n      <li>Слепой прыжок, загрузит в поля ошибок средние значения, это может помочь если у вас нету времени на калибровку\r\n      </li>\r\n    </ul>\r\n\r\n    <h4><a href=\"https://forum.taucetistation.org/t/telenauka-dlya-malenkih-i-ne-ochen/20515/15\">Путеводитель по\r\n        дереликтам и предложения для улучшения</a></h4>\r\n  </div>\r\n\r\n\r\n</div>\r\n<app-embeded-map></app-embeded-map>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CalculatorComponent } from './calculator/calculator.component';\r\nimport { PointComponent } from './point/point.component';\r\nimport { TriangulatorComponent } from './triangulator/triangulator.component';\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MiscComponent } from './misc/misc.component';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { EmbededMapComponent } from './embeded-map/embeded-map.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CalculatorComponent,\r\n    PointComponent,\r\n    TriangulatorComponent,\r\n    MiscComponent,\r\n    EmbededMapComponent,\r\n  ],\r\n  imports: [\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule, MatFormFieldModule, MatSelectModule, ClipboardModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { ErrorService } from \"../error.service\";\r\nimport { fromEvent } from 'rxjs';\r\n@Component({\r\n  selector: 'app-calculator',\r\n  templateUrl: './calculator.component.html',\r\n  styleUrls: ['./calculator.component.scss']\r\n})\r\n\r\n\r\n\r\nexport class CalculatorComponent implements OnInit {\r\n\r\n\r\n\r\n  Start = {x:NaN,y:NaN}; \r\n  End = {x:NaN,y:NaN}; \r\n  Telepad = {x:NaN,y:NaN}; \r\n \r\n  isElevation:Boolean=true;\r\n  Elevation1:number=45;\r\n  Elevation2:number=50;\r\n\r\n  Power1:number=25;\r\n  Power2:number=30;\r\n  \r\n  Bearing:number=0;\r\n  \r\n  hasResult:Boolean=false;\r\n  deltaPower:number;\r\n  deltaBearing:number;\r\n  deltaElevation:number;\r\n\r\n  errorservice :ErrorService;\r\n  \r\n\r\n  @Output() onCalculated= new EventEmitter<Record<string,number>>();\r\n \r\n  constructor(errorservice:ErrorService) { this.errorservice=errorservice; this.errorservice.holopadUpdated$.subscribe(arg => {\r\n     \r\n    this.Telepad.x=arg[0];\r\n    this.Telepad.y=arg[1];\r\n    \r\n\r\n}\r\n); }\r\n\r\n  ngOnInit(): void {\r\n\r\n    fromEvent(document, 'click').subscribe(() =>this.errorservice.SetTelepad(this.Telepad.x,this.Telepad.y));\r\n  }\r\n \r\n\r\n\r\n  calculateErrors()\r\n  {\r\n    let delta1 = {\r\n      x: this.Start.x - this.Telepad.x,\r\n      y:  this.Start.y - this.Telepad.y,\r\n    };\r\n    let delta2 = {\r\n      x:  this.End.x - this.Telepad.x,\r\n      y:  this.End.y -this.Telepad.y,\r\n    };\r\n  \r\n    let D1 = Math.hypot(delta1.x, delta1.y);\r\n    let D2 = Math.hypot(delta2.x, delta2.y);\r\n  \r\n    let bearing1 = Math.atan2(delta1.x, delta1.y) * 180 / Math.PI;\r\n    let bearing2 = Math.atan2(delta2.x, delta2.y) * 180 / Math.PI;\r\n    this.deltaBearing = -Math.round((2 * this.Bearing - bearing1 - bearing2) / 2); //average\r\n    if (this.isElevation)\r\n    {\r\n      this.deltaElevation = Math.round(\r\n        90 / Math.PI * Math.atan(\r\n          (D2 * Math.sin(Math.PI / 90 * this.Elevation1) - D1*Math.sin(Math.PI / 90 *this.Elevation2)) / ///* fix vim highlighting here\r\n          (D1 * Math.cos(Math.PI / 90 * this.Elevation2) - D2*Math.cos(Math.PI / 90 * this.Elevation1))\r\n        )\r\n      );\r\n      \r\n      let p1 = Math.sqrt(10 * D1 / Math.sin(Math.PI / 90 * (this.Elevation1 +  this.deltaElevation)));\r\n      let p2 = Math.sqrt(10 * D2 / Math.sin(Math.PI / 90 * (this.Elevation2 +  this.deltaElevation)));\r\n      this.deltaPower = -Math.round((2 * this.Power1 - p1 - p2) / 2);\r\n    }\r\n    else\r\n    {\r\n      this.deltaPower = this.clamp(Math.round((Math.sqrt(D2) *  this.Power1 - Math.sqrt(D1) *  this.Power2) / (Math.sqrt(D1) - Math.sqrt(D2))), -4, 0);\r\n\r\n      let elev1 = Math.asin(10 * D1 / ( this.Power1 + this.deltaPower)**2) * 90 / Math.PI;\r\n      let elev2 = Math.asin(10 * D2 / ( this.Power2 + this.deltaPower)**2) * 90 / Math.PI;\r\n\r\n      if(Number.isNaN( this.Elevation1)) {\r\n        this.deltaElevation = -Math.round( this.Elevation1 - elev2);\r\n      } else if(Number.isNaN( this.Elevation2)) {\r\n        this.deltaElevation = -Math.round( this.Elevation1 - elev1);\r\n      } else {\r\n        this.deltaElevation = -Math.round((2 *  this.Elevation1 - elev1 - elev2) / 2);\r\n      }\r\n    }\r\n\r\n\r\n    this.errorservice.ErrorsCalculated({power:this.deltaPower,elevation:this.deltaElevation,bearing:this.deltaBearing, tele_x:this.Telepad.x,tele_y:this.Telepad.y});\r\n    this.hasResult=true;\r\n  }\r\n  clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n  }\r\n\r\n  loadTelepad(x:number,y:number)\r\n  {\r\n    this.Telepad.x=x;\r\n    this.Telepad.y=y;\r\n  }\r\n\r\n}\r\n","<span>Сила<mat-slide-toggle [(ngModel)]=\"isElevation\"> \r\n    \r\n</mat-slide-toggle>Подъем</span> <br/>\r\n<div>\r\n\r\n<app-point  id=\"TELEPAD\" [(cords)]=\"Telepad\" [x_label]=\"'X Телепада'\" [y_label]=\"'Y Телепада'\"    ></app-point> <br>\r\n<app-point [(cords)]=\"Start\" [x_label]=\"'X1:'\" [y_label]=\"'Y1:'\"  ></app-point> <br/>\r\n<app-point [(cords)]=\"End\" [x_label]=\"'X2:'\" [y_label]=\"'Y2:'\"></app-point>   \r\n</div>\r\n<div >\r\n  <ng-template [ngIf]=\"isElevation\" [ngIfElse]=\"power\">\r\n  \r\n   <label>Подъем 1\r\n       <input type=\"number\" [(ngModel)]=\"Elevation1\" /> \r\n   </label>\r\n   <label>Подъем 2\r\n    <input type=\"number\" [(ngModel)]=\"Elevation2\" /> \r\n    </label>\r\n\r\n  </ng-template>\r\n  <ng-template #power>\r\n    <label>Сила 1 <select [(ngModel)]=\"Power1\">\r\n     <option value=\"5\">5</option>\r\n     <option value=\"10\">10</option>\r\n     <option value=\"20\">20</option>\r\n     <option value=\"25\">25</option>\r\n     <option value=\"30\">30</option>\r\n     <option value=\"40\">40</option>\r\n     <option value=\"50\">50</option>\r\n     <option value=\"80\">80</option>\r\n     <option value=\"100\">100</option>\r\n    </select>\r\n    </label>\r\n    <label>Сила 2 <select [(ngModel)]=\"Power2\">\r\n      <option value=\"5\">5</option>\r\n      <option value=\"10\">10</option>\r\n      <option value=\"20\">20</option>\r\n      <option value=\"25\">25</option>\r\n      <option value=\"30\">30</option>\r\n      <option value=\"40\">40</option>\r\n      <option value=\"50\">50</option>\r\n      <option value=\"80\">80</option>\r\n      <option value=\"100\">100</option>\r\n     </select>\r\n     </label>\r\n  </ng-template>\r\n</div>\r\n\r\n\r\n<label *ngIf=\"isElevation\">СИЛА<select [(ngModel)]=\"Power1\">\r\n  <option value=\"5\">5</option>\r\n  <option value=\"10\">10</option>\r\n  <option value=\"20\">20</option>\r\n  <option value=\"25\">25</option>\r\n  <option value=\"30\">30</option>\r\n  <option value=\"40\">40</option>\r\n  <option value=\"50\">50</option>\r\n  <option value=\"80\">80</option>\r\n  <option value=\"100\">100</option>\r\n </select>\r\n </label>\r\n\r\n<label *ngIf=\"!isElevation\">Подъем\r\n    <input type=\"number\" [(ngModel)]=\"Elevation1\" />  \r\n</label>\r\n\r\n<label>Отклонение\r\n    <input type=\"number\" [(ngModel)]=\"Bearing\" > \r\n</label>\r\n\r\n<br>\r\n<button (click)=\"calculateErrors()\">\r\n    Вычислить ошибки\r\n</button>\r\n\r\n<div *ngIf=\"hasResult\">\r\n  <p [style.background-color]=\"deltaBearing>=-10 && deltaBearing<=10 ? 'transparent' : 'red'\" >ΔBearing: {{deltaBearing}}</p> \r\n  <p [style.background-color]=\"deltaElevation>=-25 && deltaElevation<=25 ? 'transparent' : 'red'\" >ΔElevation: {{deltaElevation}}</p>\r\n  <p [style.background-color]=\"deltaPower>=-4 && deltaPower<=0 ? 'transparent' : 'red'\" >ΔPower: {{deltaPower}}</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'app-embeded-map',\n  templateUrl: './embeded-map.component.html',\n  styleUrls: ['./embeded-map.component.scss']\n})\nexport class EmbededMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n    fromEvent(document, 'click').subscribe(() =>this.click());\n  }\n\n  click()\n  {\n    console.log(\"test\");\n  }\n}\n","<iframe sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n    src=\"https://affectedarc07.github.io/SS13WebMap/TauCetiClassic/BoxStation/\"></iframe>","import { Injectable } from '@angular/core';\r\nimport { Subject }    from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n\r\n  private errorSource= new Subject<Record<string,number>>();\r\n  private holopadSource= new Subject<Array<number>>();\r\n  private blindSource= new Subject<void>();\r\n  private saveSource=new Subject<{bearing:number,elevation:number,power:number}>();\r\n  saveEvent= this.saveSource.asObservable();\r\n  blindEvent = this.blindSource.asObservable();\r\n  readyToPaste$= this.errorSource.asObservable();\r\n  holopadUpdated$=this.holopadSource.asObservable();\r\n\r\n\r\n  public ErrorsCalculated(res: Record<string,number>)\r\n  {\r\n    this.errorSource.next(res);\r\n  }\r\n\r\n  public SaveCords(cords:{bearing:number,elevation:number,power:number})\r\n  {\r\n    this.saveSource.next(cords);\r\n  }\r\n  public SetTelepad(x:number,y:number)\r\n  {\r\n     this.holopadSource.next([x,y]);\r\n  }\r\n  public BlindMode()\r\n  {\r\n    this.blindSource.next();\r\n  }\r\n\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit,ChangeDetectorRef } from '@angular/core';\r\nimport { ErrorService } from '../error.service';\r\n\r\n@Component({\r\n  selector: 'app-misc',\r\n  templateUrl: './misc.component.html',\r\n  styleUrls: ['./misc.component.scss']\r\n})\r\nexport class MiscComponent implements OnInit {\r\n   errorSerivce:ErrorService;\r\n   save_iterator=0;\r\n   savedCords: {label:string,id:number,bearing: string,elevation: string,power: string}[] = [];\r\n\r\n\r\n  constructor(errorService:ErrorService, private cdr:ChangeDetectorRef ) { \r\n      this.errorSerivce=errorService;\r\n      errorService.saveEvent\r\n      .subscribe(arg => {\r\n         let label=window.prompt(\"Введите название\",\"Позиция\");\r\n         if (!label) return;\r\n         this.savedCords.push({label:label,id:this.save_iterator,\r\n          bearing: arg.bearing.toFixed(2),\r\n          elevation: arg.elevation.toFixed(2),\r\n          power: arg.power.toFixed(2)});\r\n          cdr.detectChanges();\r\n          \r\n      }\r\n      );\r\n\r\n\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  loadTelepad(x:number,y:number)\r\n  { \r\n  \r\n     this.errorSerivce.SetTelepad(x,y);\r\n  }\r\n  BlindMode()\r\n  {\r\n     this.errorSerivce.BlindMode();\r\n  }\r\n\r\n}\r\n","<button (click)=\"loadTelepad(170,133)\">Загрузить позицию телепада для \"Исхода\"</button> <br>\r\n<button (click)=\"BlindMode()\">Слепой прыжок!</button>Ввести средние значения ошибок<br>\r\n<ul>\r\n    <li *ngFor=\"let cord of savedCords\"> {{cord.label}}\r\n         <button style=\"width: 100px;\" [cdkCopyToClipboard]=\"cord.bearing\">Отклонение: <br>{{cord.bearing}} </button>        \r\n         <button style=\"width: 100px;\" [cdkCopyToClipboard]=\"cord.elevation\">Подъем: <br>{{cord.elevation}} </button>        \r\n         <button style=\"width: 100px;\" [cdkCopyToClipboard]=\"cord.power\">Сила: <br>{{cord.power}} </button>        \r\n    </li>\r\n</ul>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n@Component({\r\n  selector: 'app-point',\r\n  templateUrl: './point.component.html',\r\n  styleUrls: ['./point.component.scss']\r\n})\r\nexport class PointComponent implements OnInit {\r\n\r\n  @Input() x_label: string;\r\n  @Input() y_label: string;\r\n\r\n\r\n  point = { x: 0, y: 0 };\r\n\r\n  @Output() cordsChange = new EventEmitter();\r\n  @Input()\r\n  get cords() {\r\n    return this.point;\r\n  }\r\n  set cords(value) {\r\n    this.point = value;\r\n    this.cordsChange.emit(this.cords);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  enterRaw() {\r\n    let raw: string = prompt(\"Enter coordinated like Any(x,y,z)\").replace(/\\s/g, \"\");;\r\n\r\n    let reg = /\\((\\d*),(\\d*),\\d*\\)/i;\r\n    let res = reg.exec(raw);\r\n    if (res && res.length == 3) {\r\n      this.cords = { x: Number.parseInt(res[1]), y: Number.parseInt(res[2]) };\r\n    }\r\n\r\n    else {\r\n      this.cords = { x: Number.parseInt(/x=\\d*/.exec(raw)[0].substr(2)), y: Number.parseInt(/y=\\d*/.exec(raw)[0].substr(2)) }\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<button (click)=\"this.enterRaw()\"></button>\r\n<label>{{x_label}}\r\n    <input [(ngModel)]=\"cords.x\" type=\"number\" />\r\n</label>\r\n<label>{{y_label}}\r\n    <input [(ngModel)]=\"cords.y\" type=\"number\" />\r\n</label>","import { Component, OnInit } from '@angular/core';\r\nimport { ErrorService } from '../error.service';\r\n\r\n@Component({\r\n  selector: 'app-triangulator',\r\n  templateUrl: './triangulator.component.html',\r\n  styleUrls: ['./triangulator.component.scss']\r\n})\r\nexport class TriangulatorComponent implements OnInit {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  telepad = { x: NaN, y: NaN };\r\n\r\n\r\n  targetPower: number = NaN;\r\n  targetBearing: number = NaN;\r\n  targeElevation: number = NaN;\r\n  hasResult: Boolean = false;\r\n\r\n  errorService: ErrorService;\r\n  Errors = { power: NaN, bearing: NaN, elevation: NaN }\r\n  TargetPos = { x: NaN, y: NaN };\r\n\r\n\r\n  constructor(errorService: ErrorService) {\r\n    this.errorService = errorService;\r\n    errorService.readyToPaste$\r\n      .subscribe(arg => {\r\n\r\n        this.Errors = { power: arg[\"power\"], bearing: arg[\"bearing\"], elevation: arg[\"elevation\"] }\r\n\r\n        this.telepad.x = arg[\"tele_x\"];\r\n        this.telepad.y = arg[\"tele_y\"];\r\n\r\n      }\r\n      );\r\n    errorService.holopadUpdated$\r\n      .subscribe(arg => {\r\n\r\n        this.telepad.x = arg[0];\r\n        this.telepad.y = arg[1];\r\n      }\r\n      );\r\n    errorService.blindEvent\r\n      .subscribe(arg => {\r\n\r\n        this.Errors.bearing = 0;\r\n        this.Errors.elevation = 0;\r\n        this.Errors.power = -2;\r\n      }\r\n      );\r\n\r\n\r\n  }\r\n\r\n  SaveCords() {\r\n    this.errorService.SaveCords({ bearing: this.targetBearing, elevation: this.targeElevation, power: this.targetPower });\r\n  }\r\n\r\n  Triangulate(target: Record<string, number>, telepad: Record<string, number>, error: Record<string, number>, recurse: Boolean) {\r\n\r\n    const POWERS = [5, 10, 20, 25, 30, 40, 50, 80, 100];\r\n    target.x -= telepad.x;\r\n    target.y -= telepad.y;\r\n    let distance = Math.hypot(target.x, target.y);\r\n\r\n    //calculate minimum power for minimal electricity losses\r\n    for (let P of POWERS) {\r\n      let elevation = 90 / Math.PI * Math.asin(10 * distance / (P + error.power) ** 2);\r\n      let trueElevation = elevation - error.elevation;\r\n      let invElevation = 90 - elevation - error.elevation;\r\n      let bearing = 180 / Math.PI * Math.atan2(target.x, target.y) + error.bearing;\r\n      bearing = bearing < 0 ? bearing + 360 : bearing;\r\n      let trueGood = (trueElevation > 0 && trueElevation < 90);\r\n      let invGood = (invElevation > 0 && invElevation < 90);\r\n      if (!Number.isNaN(elevation) && (trueGood || invGood)) {\r\n        let hit = {\r\n          bearing: bearing,\r\n          elevation: trueGood ? trueElevation : invElevation,\r\n          power: P\r\n        };\r\n\r\n        let miss = this.visit(hit, this.telepad, error);\r\n        if (!recurse)\r\n          return hit;\r\n        target.x = (target.x + this.telepad.x) - (miss.x - target.x - this.telepad.x);\r\n        target.y = (target.y + this.telepad.y) - (miss.y - target.y - this.telepad.y);\r\n        return this.Triangulate(target, this.telepad, error, false);\r\n      }\r\n    }\r\n\r\n    return {\r\n      bearing: NaN,\r\n      elevation: NaN,\r\n      power: NaN\r\n    };\r\n  }\r\n  BeginTriangulation(): void {\r\n\r\n    var target = Object.create(this.TargetPos);\r\n\r\n    var result = this.Triangulate(target, this.telepad, this.Errors, true);\r\n    this.targeElevation = result[\"elevation\"];\r\n    this.targetPower = result[\"power\"];\r\n    this.targetBearing = result[\"bearing\"];\r\n    this.hasResult = true;\r\n\r\n\r\n  }\r\n\r\n\r\n  visit(target, telepad, error) {\r\n    let rotation = target.bearing + error.bearing;\r\n    let angle = this.clamp(target.elevation + error.elevation, 1, 90);\r\n    let power = this.clamp(target.power + error.power, 1, 1000);\r\n\r\n    let distance = 0.1 * power ** 2 * Math.sin(angle * Math.PI / 90)\r\n\r\n    let targetX = Math.round(telepad.x + distance * Math.sin(rotation * Math.PI / 180));\r\n    let targetY = Math.round(telepad.y + distance * Math.cos(rotation * Math.PI / 180));\r\n\r\n    return {\r\n      x: targetX,\r\n      y: targetY\r\n    };\r\n  }\r\n\r\n  clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Посчитайте ошибки или вставьте значения ниже</p>\r\n<table class=\"tg\">\r\n  <tbody>\r\n    <tr>\r\n      <td><label>ΔОТКЛОНЕНИЕ</label></td>\r\n      <td> <input type=\"number\" [(ngModel)]=\"Errors.bearing\" /> </td>\r\n    </tr>\r\n    <tr>\r\n      <td><label>ΔПОДЪЕМ</label></td>\r\n      <td><input type=\"number\" [(ngModel)]=\"Errors.elevation\" /> </td>\r\n    </tr>\r\n    <tr>\r\n      <td><label>ΔСИЛА</label></td>\r\n      <td> <input type=\"number\" [(ngModel)]=\"Errors.power\" /> </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n\r\n\r\n\r\n\r\n<p>Введите координаты, куда нужно телепортироваться</p>\r\n<div class=\"target\">\r\n  <app-point [(cords)]=\"TargetPos\" [x_label]=\"'X Цели'\" [y_label]=\"'Y Цели'\"></app-point>\r\n</div><br>\r\n<button (click)=\"BeginTriangulation()\">Вычислить данные</button>\r\n\r\n\r\n<div *ngIf=\"hasResult\">\r\n  <button class=\"load\" [cdkCopyToClipboard]=\"this.targetBearing.toFixed(2)\">Отклонение:{{this.targetBearing.toFixed(2)}}\r\n  </button>\r\n  <button class=\"load\" [cdkCopyToClipboard]=\"this.targeElevation.toFixed(2)\">Подъем:{{this.targeElevation.toFixed(2)}}\r\n  </button>\r\n  <button class=\"load\" [cdkCopyToClipboard]=\"this.targetPower.toFixed(2)\">Сила:{{this.targetPower.toFixed(2)}} </button>\r\n  <br>\r\n\r\n  <button class=\"save\" (click)=\"SaveCords()\">Сохранить данные</button>\r\n\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}